# Цикл while (“пока”) позволяет выполнить одну и ту же последовательность действий, 
# пока проверяемое условие истинно. Условие записывается до тела цикла и 
# проверяется до выполнения тела цикла. Как правило, цикл while используется, 
# когда невозможно определить точное значение количества проходов исполнения цикла. 

i = 1
while i <= 10:
    print(i ** 2)
    i += 1

# После тела цикла можно написать слово else: и после него блок операций, 
# который будет выполнен один раз после окончания цикла, 
# когда проверяемое условие станет неверно: 

i = 1
while i <= 10:
    print(i)
    i += 1
else:
    print('Цикл окончен, i =', i)


# step = 0
# while step < 10000:
#     print(step)
#     if tired == True:
#         break
#     elif badweather == True:
#         break
#     else:
#         step = step + 1

# Несколько условия
x = 45
y = 80
while x < 50 and y < 100:
    x = x + 1
    y = y + 1
    print(x, y)

# Задание вопроса в цикле
number = 23
running = True

while running:
    guess = int(input('Введите целое число : '))

    if guess == number:
        print('Поздравляю, вы угадали.')
        running = False # это останавливает цикл while
    elif guess < number:
        print('Нет, загаданное число немного больше этого.')
    else:
        print('Нет, загаданное число немного меньше этого.')
else:
    print('Цикл while закончен.')
    # Здесь можете выполнить всё что вам ещё нужно

print('Завершение.')

# При появлении отрицательного числа программа завершается через break
a = int(input())
while a != 0:
    if a < 0:
        print('Встретилось отрицательное число', a)
        break
    a = int(input()) # Повторное предложение ввести число, первое работает один раз
else:
    print('Ни одного отрицательного числа не встретилось')

# данный код считает количество знаков в числе
n = int(input())
length = 0
while n != 0:
    length += 1
    n //= 10
print('Длина числа равна', length)

# или на мноого проще
n = int(input())
print('Длина числа равна', len(str(n)))